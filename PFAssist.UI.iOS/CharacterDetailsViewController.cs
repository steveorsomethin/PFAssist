// This file has been autogenerated from a class added in the UI designer.
using System;
using System.Drawing;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using ReactiveUI;
using ReactiveUI.Cocoa;
using PFAssist.Core;
using System.Reactive.Linq;

namespace PFAssist.UI.iOS
{
	public partial class CharacterDetailsViewController : UIViewController
	{
		public Character character;
		public ReactiveTableViewSource tableViewSource;

		public CharacterDetailsViewController (IntPtr handle) : base (handle)
		{
			character = new Character ();
		}

		partial void Cancel (NSObject sender)
		{
			DismissViewControllerAsync(true);
		}

		partial void Save (NSObject sender)
		{
			DismissViewControllerAsync(true);
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			var titleTextAttributes = NavigationController.NavigationBar.GetTitleTextAttributes();
			titleTextAttributes.TextColor = UIColor.White;

			NavigationController.NavigationBar.SetBackgroundImage (new UIImage (), UIBarMetrics.Default);
			NavigationController.NavigationBar.ShadowImage = new UIImage ();
			NavigationController.NavigationBar.Translucent = true;
			NavigationController.NavigationBar.SetTitleTextAttributes(titleTextAttributes);

			tableView.Source = tableViewSource = new ReactiveTableViewSource (this.tableView);
			tableViewSource.Data = new ReactiveList<TableSectionInformation<UITableViewCell>>(new [] {
				MakeSection("ARMOR", new ReactiveList<SimpleStatViewModel> (new [] {
					new SimpleStatViewModel("Armor", character.ArmorClass.Total),
					new SimpleStatViewModel("Touch", character.ArmorClass.TouchTotal),
					new SimpleStatViewModel("Flat Footed", character.ArmorClass.FlatFootedTotal)
				})),
				MakeSection("SAVES", new ReactiveList<SimpleStatViewModel> (new [] {
					new SimpleStatViewModel("Fortitude", character.Saves.Fortitude.Total),
					new SimpleStatViewModel("Reflex", character.Saves.Reflex.Total),
					new SimpleStatViewModel("will", character.Saves.Will.Total)
				}))
			});

			tableView.BackgroundColor = UIColor.Clear;
		}

		private TableSectionInformation<UITableViewCell> MakeSection(String headerText, ReactiveList<SimpleStatViewModel> statCellList)
		{
			var sectionInfo = new TableSectionInformation<UITableViewCell> (statCellList, new NSString("EditableViewCell"), 40.0f, (cell) => {
				var sCell = cell as EditableViewCell;
				sCell.BindToViewModel();
			});

			sectionInfo.Header = new TableSectionHeader (() => {
				var header = new UITableViewHeaderFooterView ();
				header.TextLabel.Text = headerText;
				header.TextLabel.TextColor = UIColor.White;
				header.ContentView.BackgroundColor = new UIColor(0f, 0f, 0f, 0.3f);
				return header;
			}, 50.0f);

			return sectionInfo;
		}
	}
}
